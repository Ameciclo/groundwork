networks:
  monitoring:
    driver: overlay
    attachable: true
  kong-gateway_kong-net:
    external: true

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

configs:
  prometheus_yml:
    file: ./prometheus.yml
  alert_rules:
    file: ./alert.rules
  loki_yml:
    file: ./loki.yml
  promtail_yml:
    file: ./promtail.yml
  grafana_datasource_prometheus:
    file: ./grafana/provisioning/datasources/prometheus.yml

services:
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    volumes:
      - prometheus_data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: prometheus_yml
        target: /etc/prometheus/prometheus.yml
      - source: alert_rules
        target: /etc/prometheus/alert.rules
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    labels:
      - "kong.service=grafana"
      - "kong.upstream=http://grafana:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-http://localhost:3001}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
      # Auto-provision the Prometheus data source
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
    configs:
      - source: grafana_datasource_prometheus
        target: /etc/grafana/provisioning/datasources/prometheus.yml
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    networks:
      - monitoring
      - kong-gateway_kong-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_VERSION:-latest}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    ports:
      - "${CADVISOR_PORT:-8081}:8080"
    networks:
      - monitoring
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    user: root
    privileged: true
    ports:
      - "${NODE_EXPORTER_PORT:-9100}:9100"
    networks:
      - monitoring
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  loki:
    image: grafana/loki:${LOKI_VERSION:-latest}
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    configs:
      - source: loki_yml
        target: /etc/loki/local-config.yaml
    ports:
      - "${LOKI_PORT:-3100}:3100"
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  promtail:
    image: grafana/promtail:${PROMTAIL_VERSION:-latest}
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    configs:
      - source: promtail_yml
        target: /etc/promtail/config.yml
    networks:
      - monitoring
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

